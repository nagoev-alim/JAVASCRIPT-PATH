import Toastify from 'toastify-js';
import 'toastify-js/src/toastify.css';

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (—Ç–æ—Å—Ç–æ–≤)
 *
 * @param message - –¢–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
 * @param type - –¢–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (success, error, warning)
 * @param classname - –î–æ–ø. –∫–ª–∞—Å—Å –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏
 */
export function toast(
  message: string = '',
  type: 'success' | 'error' | 'warning',
  classname: string = '',
): void {

  // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–ª–∞—Å—Å–æ–≤ –∏ —Ç–µ–∫—Å—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
  let classList: string = '';
  let text: string = '';

  switch (type) {

    case 'success':
      classList = 'border-green-200 bg-green-100';
      text = `‚úÖ ${message}`;
      break;

    case 'warning':
      classList = 'border-orange-200 bg-orange-100';
      text = `üöß ${message}`;
      break;

    case 'error':
      classList = 'border-red-200 bg-red-100';
      text = `‚õîÔ∏è ${message}`;
      break;

    default:
      break;
  }

  // –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å –ø–æ–º–æ—â—å—é –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ Toastify
  Toastify({
    text: text,
    className: `bg-none shadow-none text-black border ${classList} ${classname}`,
    duration: 3000,
    gravity: 'bottom',
    position: 'center',
  }).showToast();
}
