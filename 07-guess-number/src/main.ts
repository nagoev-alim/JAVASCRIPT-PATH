import './style.css';
import Toastify from 'toastify-js';
import 'toastify-js/src/toastify.css';
import confetti from 'canvas-confetti';
import { getRandomNumber } from './utils/getRandomNumber';

class GuessNumber {
  // –ü—Ä–∏–≤–∞—Ç–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –∫–ª–∞—Å—Å–∞
  private form: HTMLFormElement;
  private alert: HTMLDivElement;
  private secret: number = getRandomNumber(1, 10); // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ–∫—Ä–µ—Ç–Ω–æ–≥–æ —á–∏—Å–ª–∞
  private attempts: number = 3; // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫
  /**
   * –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–ª–∞—Å—Å–∞ `GuessNumber`.
   */
  constructor() {
    this.initialize(); // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—ä–µ–∫—Ç–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä—ã.
   */
  private initialize(): void {
    this.createDOM(); // –°–æ–∑–¥–∞–Ω–∏–µ DOM-—Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    this.setupEventListeners(); // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
    console.log(`The number that was guessed is ${this.secret}`); // –í—ã–≤–æ–¥ —Å–µ–∫—Ä–µ—Ç–Ω–æ–≥–æ —á–∏—Å–ª–∞ –≤ –∫–æ–Ω—Å–æ–ª—å
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç DOM-—Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏–≥—Ä—ã.
   */
  private createDOM(): void {
    const root: HTMLDivElement = document.querySelector('#app')!;
    if (!root) return;

    // –í—Å—Ç–∞–≤–∫–∞ HTML-—Ä–∞–∑–º–µ—Ç–∫–∏ –≤ –∫–æ—Ä–Ω–µ–≤–æ–π —ç–ª–µ–º–µ–Ω—Ç
    root.innerHTML = `
      <div class='border shadow rounded max-w-md w-full p-3 grid gap-4'>
        <h1 class='text-center font-bold text-2xl md:text-4xl'>Guess Number</h1>
        <p>Guess the number is a game in which you have to guess the number given by the computer between 0 and 10. Use as few tries as possible. Good luck!</p>
        <form data-form>
          <label aria-label='Enter the number'>
            <input class='border-2 w-full px-3 py-2.5' type='number' name='guess' placeholder='Enter the number' min='1' max='10'>
          </label>
        </form>
        <div class='hidden' data-alert></div>
      </div>
    `;

    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Å—ã–ª–æ–∫ –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç—ã DOM
    this.form = document.querySelector<HTMLFormElement>('[data-form]')!;
    this.alert = document.querySelector<HTMLDivElement>('[data-alert]')!;
  }

  /**
   * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π.
   */
  private setupEventListeners(): void {
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
    this.form?.addEventListener('submit', this.handleSubmit.bind(this));
  }

  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º—ã.
   * @param event –°–æ–±—ã—Ç–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã.
   */
  private handleSubmit(event: Event): void {
    event.preventDefault();
    const form = event.target as HTMLFormElement;
    const formData = new FormData(form);
    const guess = parseInt(formData.get('guess') || '0', 10);

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ —á–∏—Å–ª–∞
    if (guess < 0 || guess > 10) {
      // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ Toastify
      Toastify({
        text: '‚õîÔ∏è Please enter a number from 0 to 10!',
        className: 'bg-none shadow-none bg-orange-100 text-black border border-orange-200',
        duration: 2000,
        gravity: 'bottom',
        position: 'center',
      }).showToast();
      return;
    }

    if (guess === this.secret) {
      // –ï—Å–ª–∏ —á–∏—Å–ª–æ —É–≥–∞–¥–∞–Ω–æ
      form.remove(); // –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã
      this.showMessage('success', 'You guessed it ü•≥!'); // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± —É—Å–ø–µ—Ö–µ
      // –°–æ–∑–¥–∞–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∞ –∫–æ–Ω—Ñ–µ—Ç—Ç–∏
      confetti({
        angle: getRandomNumber(55, 125),
        spread: getRandomNumber(50, 70),
        particleCount: getRandomNumber(50, 100),
        origin: { y: 0.6 },
      });
      this.restart(); // –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É –∑–∞–Ω–æ–≤–æ
    } else {
      // –ï—Å–ª–∏ —á–∏—Å–ª–æ –Ω–µ —É–≥–∞–¥–∞–Ω–æ
      this.attempts--; // –£–º–µ–Ω—å—à–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –ø–æ–ø—ã—Ç–æ–∫
      if (this.attempts === 0) {
        form.remove(); // –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã
        this.showMessage('lost', `You lost ü•≤! The number you guessed - ${this.secret}`); // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø–æ—Ä–∞–∂–µ–Ω–∏–∏
        this.restart(); // –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É –∑–∞–Ω–æ–≤–æ
      } else {
        this.showMessage('error', `Try again. Attempts left ${this.attempts}`); // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ
        form.reset(); // –°–±—Ä–æ—Å –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–æ—Ä–º–µ
      }
    }
  }

  /**
   * –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç –∏–≥—Ä—É.
   */
  private restart(): void {
    document.querySelector('[data-restart]')?.addEventListener('click', function() {
      return location.reload(); // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–π –∏–≥—Ä—ã
    });
  };

  /**
   * –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
   * @param type –¢–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è ('error', 'lost', 'success').
   * @param text –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è.
   */
  private showMessage(type: string, text: string): void {
    const input = document.querySelector('input')!;
    if (this.alert || input) {
      this.alert!.textContent = text;
      switch (type) {
        case 'error':
          // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ Toastify
          Toastify({
            text: `‚õîÔ∏è ${text}`,
            className: 'bg-none shadow-none bg-orange-100 text-black border border-orange-200',
            duration: 2000,
            gravity: 'bottom',
            position: 'center',
          }).showToast();
          input!.disabled = true;
          setTimeout(() => {
            input!.disabled = false;
            input!.focus();
          }, 2000);
          break;
        case 'lost':
          this.alert?.classList.remove('hidden');
          this.alert?.classList.add('text-center', 'text-orange-400', 'font-bold');
          // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã –∑–∞–Ω–æ–≤–æ
          this.alert?.insertAdjacentHTML('afterend', `<button class='border bg-orange-400 text-white px-3 py-2.5' data-restart>Play again?</button>`);
          break;
        case 'success':
          this.alert?.classList.remove('hidden');
          this.alert?.classList.add('text-center', 'text-green-400', 'font-bold');
          // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã –∑–∞–Ω–æ–≤–æ
          this.alert?.insertAdjacentHTML('afterend', `<button class='border bg-green-400 text-white px-3 py-2.5' data-restart>Play again?</button>`);
          break;
        default:
          break;
      }
    }
  }
}

// –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –∏–≥—Ä—ã
new GuessNumber();
